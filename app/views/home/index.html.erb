<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <style>
      html, body, #map-canvas {
        height: 100%;
        margin: 0px;
        padding: 0px
      }
    </style>
    <!--
    Include the maps javascript with sensor=true because this code is using a
    sensor (a GPS locator) to determine the user's location.
    See: https://developers.google.com/maps/documentation/javascript/tutorial#Loading_the_Maps_API
    -->
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=true"></script>

    <script>
// Note: This example requires that you consent to location sharing when
// prompted by your browser. If you see a blank space instead of the map, this
// is probably because you have denied permission for location sharing.

var map;
var geocoder;
var infoWindows = new Array(100);

function initialize() {
  var mapOptions = {
    zoom: 13
  };
  map = new google.maps.Map(document.getElementById('map-canvas'),
      mapOptions);
  geocoder = new google.maps.Geocoder();

  // Dropdown control
  var controlDiv = document.createElement('div');

  // Setting padding to 5 px will offset the control
  // from the edge of the map.
  controlDiv.style.padding = '5px';
  
  // Set CSS for the control border.
  var controlUI = document.createElement('div');
  controlUI.style.backgroundColor = 'white';
  controlUI.style.borderStyle = 'solid';
  controlUI.style.borderWidth = '0px';
  controlUI.style.borderRadius = '7px';
  controlUI.style.cursor = 'default';
  controlUI.style.textAlign = 'center';
  controlDiv.appendChild(controlUI);
  
  // Set CSS for the control interior.
  var controlText = document.createElement('div');
  controlText.innerHTML = '<form action=\"/\" id=\"dailyEvents\"><select name=\"date\">' +
    <% for i in 0...@NUM_DAYS %>
      '<option ' +
      <% if params[:date] == i.to_s %>
        'selected ' +
      <% end %>
      'name=\"<%= @days[i] %>\" value=\"<%= i %>\"><%= @days[i] %></option>' +
    <% end %>
    '</select><input type=\"submit\" value=\"Show Concerts\"/></form>'
  controlUI.appendChild(controlText);

  console.log("Initializing");

  // Try HTML5 geolocation
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var pos = new google.maps.LatLng(position.coords.latitude,
                                       position.coords.longitude);
      var youAreHereWindow = new google.maps.InfoWindow({
        content: "YOU ARE HERE"
      });
      var markerCenter = new google.maps.Marker({
        map: map,
        position: pos,
        title: 'You are Here',
        icon: "<%= asset_path('yorubamask.gif') %>"
      });
      google.maps.event.addListener(markerCenter, 'click', function() {
        youAreHereWindow.open(map, markerCenter);
      });
      markerCenter.setMap(map);

      map.setCenter(pos);
    }, function() {
      handleNoGeolocation(true);
    });
  } else {
    // Browser doesn't support Geolocation
    handleNoGeolocation(false);
  }
  new google.maps.TransitLayer().setMap(map);
  map.controls[google.maps.ControlPosition.TOP_CENTER].push(controlDiv);

  console.log("Hello");
  for (var i = 0; i < gon.addresses.length; i++) {
    var j = 0;
    while (!codeAddress(gon.addresses[i], i) && j < 3) {
      j++;
    }
    console.log(gon.addresses[i]);
  }
}

function handleNoGeolocation(errorFlag) {
  var options = {
    map: map,
    position: new google.maps.LatLng(40.732, -73.984),
  };
  map.setCenter(options.position);
}

function codeAddress(address, i) {
  geocoder.geocode( { 'address': address}, function(results, status) {
    if (status == google.maps.GeocoderStatus.OK) {
      var marker = new google.maps.Marker({
          map: map,
          position: results[0].geometry.location
      });
      google.maps.event.addListener(marker, 'click', function() {
        infoWindow(i).open(map, marker);
      });
    }
    else {
      if (status == "OVER_QUERY_LIMIT") {
        setTimeout(function(){ codeAddress(address, i); }, 2014);
        return status == google.maps.GeocoderStatus.OK;
      }
    }
  });
  return true;
}

function infoWindow(i) {
  if (!infoWindows[i]) {
    var contentString = '<div id="content">' +
        gon.events[i] +
        '</div>';
    infoWindows[i] = new google.maps.InfoWindow({
        content: contentString
    });
  }
  return infoWindows[i];
}

google.maps.event.addDomListener(window, 'load', initialize);

    </script>
  </head>
  <body>
    <div id="map-canvas"></div>
  </body>
</html>
